package parser

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestCronExpression(t *testing.T) {
	cases := []struct {
		input    string
		expected CronSchedule
	}{
		{
			input: "* * * * * /cmd",
			expected: CronSchedule{
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "1-4 * * * * /cmd",
			expected: CronSchedule{
				[]int{1, 2, 3, 4},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "*/10 * * * * /cmd",
			expected: CronSchedule{
				[]int{0, 10, 20, 30, 40, 50},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "1-10/2 * * * * /cmd",
			expected: CronSchedule{
				[]int{1, 3, 5, 7, 9},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "1,2 * * * * /cmd",
			expected: CronSchedule{
				[]int{1, 2},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "1-4,2 * * * * /cmd",
			expected: CronSchedule{
				[]int{1, 2, 3, 4},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "1-4,5 * * * * /cmd",
			expected: CronSchedule{
				[]int{1, 2, 3, 4, 5},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "1-4,1-10/2 * * * * /cmd",
			expected: CronSchedule{
				[]int{1, 2, 3, 4, 5, 7, 9},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "*,1-10/2 * * * * /cmd",
			expected: CronSchedule{
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "1-4,5,9-11 * * * * /cmd",
			expected: CronSchedule{
				[]int{1, 2, 3, 4, 5, 9, 10, 11},
				[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5, 6, 7}},
		},
		{
			input: "*/15 0 1,15 * 1-5 /usr/bin/find",
			expected: CronSchedule{
				[]int{0, 15, 30, 45},
				[]int{0},
				[]int{1, 15},
				[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
				[]int{1, 2, 3, 4, 5}},
		},
	}

	for _, test := range cases {
		t.Run(test.input, func(t *testing.T) {
			re, _, err := Parse(test.input)
			assert.NoError(t, err)
			assert.Equal(t, test.expected, re)
		})
	}
}
